version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15
    container_name: jitsu-postgres
    environment:
      POSTGRES_DB: jitsu_db
      POSTGRES_USER: jitsu_user
      POSTGRES_PASSWORD: jitsu_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-schema.sql:/docker-entrypoint-initdb.d/01-init-schema.sql
      - ./database/sample-data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jitsu_user -d jitsu_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: apache/kafka:3.7.0
    container_name: jitsu-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: ciWo7IWazngRchmPES6q5A==
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 15s
      timeout: 10s
      retries: 8
      start_period: 30s

  # Jitsu Microservices
  booking-service:
    build: 
      context: ./booking-service
    container_name: jitsu-booking-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jitsu_db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  ticket-service:
    build: 
      context: ./ticket-service
    container_name: jitsu-ticket-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jitsu_db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  assignment-service:
    build: 
      context: ./assignment-service
    container_name: jitsu-assignment-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jitsu_db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  event-processor:
    build: 
      context: ./event-processor
    container_name: jitsu-event-processor
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/jitsu_db
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  api-gateway:
    build: 
      context: ./api-gateway
    container_name: jitsu-api-gateway
    depends_on:
      - booking-service
      - ticket-service
      - assignment-service
    ports:
      - "8080:8080"

volumes:
  postgres_data: